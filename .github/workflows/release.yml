name: release

on:
  push:
    branches:
      - master

jobs:
  calculate-version:
    runs-on: ubuntu-latest
    outputs:
      releaseVersion: ${{ steps.exposeVersion.outputs.releaseVersion }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Read version
        id: readVersion
        run: |
          read -r version<VERSION
          echo "Snapshot version: $version";
          version=$(echo $version | sed 's/-SNAPSHOT//');
          echo $version;
          echo "::set-output name=version::$version"
          read -r versionFragment<version_fragment
          echo $versionFragment
          if [[ "$versionFragment" == "minor" ]]; then
            versionFragment=feature
            echo "Minor version will be used"
          elif [[ "$versionFragment" == "major" ]]; then
            echo "Major version will be used"
          else
            versionFragment=patch
            echo "Patch version will be used"
          fi
          echo "::set-output name=versionFragment::$versionFragment"
      - name: Bump release version if needed according to version fragment
        if: steps.readVersion.outputs.versionFragment != 'patch'
        id: bumpVersion
        uses: christian-draeger/increment-semantic-version@1.0.1
        with:
          current-version: ${{ steps.readVersion.outputs.version }}
          version-fragment: ${{ steps.readVersion.outputs.versionFragment }}
      - name: Expose release version
        id: exposeVersion
        run: |
          versionFragment=${{ steps.readVersion.outputs.versionFragment }}
          if [[ "$versionFragment" != "patch" ]]; then
            echo "::set-output name=releaseVersion::${{ steps.bumpVersion.outputs.next-version }}"
          else
            echo "::set-output name=releaseVersion::${{ steps.readVersion.outputs.version }}"
          fi
      - name: Update VERSION file
        run: echo "${{ steps.exposeVersion.outputs.releaseVersion }}" > VERSION

  create-tag:
    needs: calculate-version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Create tag
        run: |
          git config --global user.email "reportportal.io"
          git config --global user.name "reportportal.io"
          git remote set-url origin https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git checkout master
          git tag -a v${{ needs.calculate-version.outputs.releaseVersion }} -m ${{ needs.calculate-version.outputs.releaseVersion }}
          npm version from-git
          git push origin master
      - name: Bump snapshot version
        id: bumpSnapshotVersion
        uses: christian-draeger/increment-semantic-version@1.0.1
        with:
          current-version: ${{ needs.calculate-version.outputs.releaseVersion }}
          version-fragment: 'bug'
      - name: Update develop with snapshot version
        run: |
          git fetch --unshallow
          git checkout develop
          git merge origin/master
          echo "${{ steps.bumpSnapshotVersion.outputs.next-version }}-SNAPSHOT" > VERSION
          git status
          git add .
          git commit -m "${{ needs.calculate-version.outputs.releaseVersion }} -> ${{ steps.bumpSnapshotVersion.outputs.next-version }}"
          git push origin develop

  create-release:
    needs: [calculate-version, create-tag]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Create Release
        id: createRelease
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.calculate-version.outputs.releaseVersion }}
          release_name: Release v${{ needs.calculate-version.outputs.releaseVersion }}
          body: |
            Changes:
            Use changelog here
          draft: false
          prerelease: false
